acall=absolute call
add=add
addc=add with carry
ajmp=absolute jump
anl=logical-and
cjne=compare and jump if not equal
clr=clear
cpl=complement
da=decimal-adjust accumulator for addition
dec=decrement
digit indirect ram with acc
div=divide
djnz=decrement and jump if not zero
inc=increment data pointer
jb=jump if bit set
jbc=jump if bit is set and clear bit
jc=jump if carry is set
jmp=jump indirect
jnb=jump if bit not set
jnc=jump if carry not set
jnz=jump if accumulator not zero
jz=jump if accumulator zero
lcall=long call
ljmp=long jump
mov=move
movc=moves a byte from the code or program memory to the accumulator
movx=move external
nop=no operation
orl=logical-or
pop=pop from stack.pop
push=push onto stack
ret=return from subroutine
reti=return from interrupt
rl=rotate accumulator left
rlc=rotate accumulator left through the carry flag
rr=rotate accumulator right
rrc=rotate accumulator right through the carry
setb=set bit
sjmp=short jump (relative addr)
subb=subtract with borrow
swap=swap nibbles within the accumulator
xch=exchange
xchd=exchange low-order
xrl=logical exclusive-or
