avo mov $1=$2
avo lea $1=$2
avo add $1=$1+$2
avo sub $1=$1-$2
avo jmp rip=$1
avo push rsp=rsp-4,[rsp]=$1
avo pop $1=[rsp],rsp=rsp+4
avo call rsp=esp-4,[rsp]=rip+$$$,rip=$1
avo ret rip=[rsp],rsp=rsp+4
avr+ rax int64
avr+ rbx int64
avr+ rcx int64
avr+ rdx int64
avr+ rsi int64
avr+ rdi int64
avr+ rip int64
avr+ rsp int64
avr+ rbp int64
avr+ eax int32
avr+ ax int16
avr+ zf bit
avr+ cf bit
avra ax ax=eax&0xffff eax=eax>16,eax=eax<16 eax=eax|ax
avr+ al int8
avr+ ah int8
avra al al=eax&0xff al=al&0xff,rax=eax>16,eax=eax<16,eax=eax|al
avra ah ah=eax&0xff00,ah=ah>8 eax=eax&0xFFFF00ff,ah=ah<8,eax=eax|ah,ah=ah>8
avrc rip rsp rbp
avrf zf
avrr rax
