avo mov $1=$2
avo inc $1+=1
avo dec $1-=1
avo lea $1=$2
avo add $1=$1+$2
avo sub $1=$1-$2
avo jmp eip=$1
avo cmp tmp=$1,$1-=$2,$1=tmp
avo push esp=esp-4,[esp]=$1
avo pop $1=[esp],esp=esp+4
avo call esp=esp-4,[esp]=eip+$$$,eip=$1
avo ret eip=[esp],esp=esp+4
avr+ eax int32
avr+ ebx int32
avr+ ecx int32
avr+ edx int32
avr+ esi int32
avr+ edi int32
avr+ eip int32
avr+ esp int32
avr+ ebp int32
avr+ ax int16
avr+ zf bit
avr+ cf bit
avra ax ax=eax&0xffff eax=eax>16,eax=eax<16 eax=eax|ax
avr+ al int8
avr+ ah int8
avra al al=eax&0xff al=al&0xff,eax=eax>16,eax=eax<16,eax=eax|al
avra ah ah=eax&0xff00,ah=ah>8 eax=eax&0xFFFF00ff,ah=ah<8,eax=eax|ah,ah=ah>8
avrr eax
avrc eip esp ebp
avrf zf
